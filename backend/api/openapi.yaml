openapi: 3.0.3
info:
  title: Indoor Trainer App
  version: 1.0.0
servers:
  - url: /1.0
tags:
  - name: Auth
    description: Manage authentication

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: "Log in to the application"
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: "example@example.com"
                password:
                  type: string
                  example: "123456"
                oneTimePassword:
                  type: string
                  nullable: true
                secret:
                  type: string
                  nullable: true
              additionalProperties: false
              description: "Email and password for the user"
      responses:
        200:
          $ref: '#/components/responses/LoginSuccessResponse'
        409:
          $ref: '#/components/responses/APIErrorResponse'
        default:
          $ref: '#/components/responses/APIErrorResponse'

  /qrcode:
    get:
      tags:
        - Auth
      summary: "Generate QR code url for user"
      operationId: generateQRCode
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        200:
          $ref: '#/components/responses/GenerateQRCodeSuccessResponse'
        default:
          $ref: '#/components/responses/APIErrorResponse'
      security:
        - ApiKeyAuth: []
    patch:
      tags:
        - Auth
      summary: "Edit user's two factor auth secret"
      operationId: saveQRCode
      requestBody:
        $ref: '#/components/requestBodies/SaveQRCodeBody'
      responses:
        200:
          $ref: '#/components/responses/RequestStatusResponse'
        default:
          $ref: '#/components/responses/APIErrorResponse'
      security:
        - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      description: Used to authenticate all API requests
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    IdParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
    OffsetParam:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    LimitParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        default: 25
    UserIdParam:
      name: userId
      in: query
      required: true
      schema:
        type: integer
  
  schemas:
    Status:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    Id:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    APIError:
      additionalProperties: false
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Token:
      additionalProperties: false
      required:
        - user
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
            profile_picture:
              type: string
              nullable: true
            role:
              type: string
              enum:
                - admin
                - user
            token:
              type: string
            two_factor_enabled:
              type: boolean
  
  requestBodies:
    SaveQRCodeBody:
      required: true
      description: QR code data
      content:
        application/json:
          schema:
            type: object
            properties:
                secret:
                  type: string
                oneTimePassword:
                  type: string
  
  responses:
    RequestStatusResponse:
      description: Request status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
    RequestIdResponse:
      description: Id from the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Id'
    APIErrorResponse:
      description: API Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    LoginSuccessResponse:
      description: The JWT access token with long expiration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'
    GenerateQRCodeSuccessResponse:
      description: User QR code data
      content:
        application/json:
          schema:
            type: object
            properties:
              qrCodeUrl:
                type: string
              secret:
                type: string
